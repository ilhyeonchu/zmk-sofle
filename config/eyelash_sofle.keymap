#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&lt {
    bindings = <&mo>, <&sk>;

    tapping-term-ms = <400>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    shiftorcoc: shiftorcoc {
        compatible = "zmk,behavior-hold-tap";
        label = "SHIFTORCOC";
        bindings = <&kp>, <&coc>;

        #binding-cells = <2>;
        tapping-term-ms = <400>;
    };

    HoldTaptokp: HoldTaptokp {
        compatible = "zmk,behavior-hold-tap";
        label = "HOLDTAPTOKP";
        bindings = <&to>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <400>;
    };

    behaviors {
    };

    macros {
        homedirectory: homedirectory {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp TILDE &kp FSLH>;
            label = "HOMEDIRECTORY";
        };

        coc: coc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_CONTROL &sk LEFT_ALT &sk LEFT_COMMAND>;
            label = "COC";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        windowmain {
            bindings = <
&kp ESC                &kp N1     &kp N2            &kp N3        &kp N4            &kp N5                &kp UP_ARROW     &kp N6                &kp N7     &kp N8     &kp N9     &kp N0     &kp BSLH
&kp TAB                &kp Q      &kp W             &kp E         &kp R             &kp T                 &kp DOWN_ARROW   &kp Y                 &kp U      &kp I      &kp O      &kp P      &kp BSPC
&kp RALT               &kp A      &kp S             &kp D         &kp F             &kp G                 &kp LEFT_ARROW   &kp H                 &kp J      &kp K      &kp L      &kp SEMI   &kp RET
&shiftorcoc LSHFT F17  &kp Z      &kp X             &kp C         &kp V             &kp B                 &kp RIGHT_ARROW  &kp N                 &kp M      &kp COMMA  &kp DOT    &kp FSLH   &shiftorcoc RSHFT 0
&kp C_MUTE             &kp LCTRL  &kp LEFT_COMMAND  &kp LEFT_ALT  &lt 1 LEFT_SHIFT  &lt 2 LEFT_CONTROL    &kp ENTER        &HoldTaptokp 3 GRAVE  &kp SPACE  &kp CAPS   &kp PG_DN  &kp PG_UP
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        windowf {
            bindings = <
&kp GRAVE      &kp F1          &kp F2        &kp F3        &kp F4         &kp F5          &mmv MOVE_UP     &kp F6        &kp F7     &kp F8            &kp F9        &kp F10       &trans
&kp LS(TILDE)  &kp N1          &kp N2        &kp N3        &kp N4         &kp N5          &mmv MOVE_DOWN   &kp N6        &kp N7     &kp N8            &kp N9        &kp N0        &kp BSLH
&kp LSHFT      &kp ESC         &kp TAB       &kp BSPC      &kp RET        &kp LS(DQT)     &mmv MOVE_LEFT   &kp LEFT      &kp DOWN   &kp UP            &kp RIGHT     &kp SQT       &kp RSHFT
&kp LS(CARET)  &kp LEFT_SHIFT  &kp LBKT      &kp LS(LBRC)  &kp LS(PRCNT)  &kp LS(STAR)    &mmv MOVE_RIGHT  &kp LS(PLUS)  &kp MINUS  &kp EQUAL         &kp LS(LPAR)  &kp FSLH      &kp LS(PRCNT)
&kp C_MUTE     &kp RBKT        &kp LS(RBRC)  &kp LGUI      &trans         &to 0           &mkp LCLK        &kp GRAVE     &kp SPACE  &sk LEFT_COMMAND  &kp DOLLAR    &kp LS(RPAR)
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        osandbt {
            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4        &mmv MOVE_UP      &kp F6         &kp F7        &kp F8        &kp F9        &kp F10       &out OUT_TOG
&kp ESC         &kp LS(EXCL)  &kp LS(AT)    &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)       &mmv MOVE_DOWN    &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)  &kp PLUS
&kp TAB         &kp N1        &kp N2        &kp N3         &kp N4        &kp N5              &mmv MOVE_LEFT    &kp N6         &kp N7        &kp N8        &kp N9        &kp N0        &kp LGUI
&kp LCTRL       &kp LBKT      &kp RBKT      &kp LS(LBRC)   &kp LS(RBRC)  &kp RBKT            &mmv MOVE_RIGHT   &kp LS(LT)     &kp LS(GT)    &kp COMMA     &kp DOT       &kp FSLH      &kp SHFT
&trans          &kp LCTRL     &kp LALT      &kp LGUI       &kp LSHFT     &sk LG(LC(LALT))    &kp LC(LA(LGUI))  &trans         &trans        &kp LGUI      &trans        &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        macmain {
            bindings = <
&kp ESC                &kp N1     &kp N2    &kp N3    &kp N4            &kp N5                &trans  &kp N6                &kp N7       &kp N8        &kp N9          &kp N0           &kp BSLH
&kp TAB                &kp Q      &kp W     &kp E     &kp R             &kp T                 &trans  &kp Y                 &kp U        &kp I         &kp O           &kp P            &kp BACKSPACE
&kp CAPS               &kp A      &kp S     &kp D     &kp F             &kp G                 &trans  &kp H                 &kp J        &kp K         &kp L           &kp SEMI         &kp RET
&shiftorcoc LSHFT F17  &kp Z      &kp X     &kp C     &kp V             &kp B                 &trans  &kp N                 &kp M        &kp COMMA     &kp DOT         &kp FSLH         &shiftorcoc RSHFT 0
&trans                 &kp LCTRL  &kp LALT  &kp LGUI  &lt 4 LEFT_SHIFT  &lt 2 LEFT_COMMAND    &trans  &HoldTaptokp 0 GRAVE  &lt 2 SPACE  &kp CAPSLOCK  &kp LEFT_ARROW  &kp RIGHT_ARROW
            >;
        };

        macf {
            display-name = "layer1";
            bindings = <
&kp GRAVE      &kp F1          &kp F2        &kp F3        &kp F4         &kp F5          &mmv MOVE_UP     &kp F6        &kp F7     &kp F8            &kp F9        &kp F10       &trans
&kp LS(TILDE)  &kp N1          &kp N2        &kp N3        &kp N4         &kp N5          &mmv MOVE_DOWN   &kp N6        &kp N7     &kp N8            &kp N9        &kp N0        &kp BSLH
&kp LSHFT      &kp ESC         &kp TAB       &kp BSPC      &kp RET        &kp LS(DQT)     &mmv MOVE_LEFT   &kp LEFT      &kp DOWN   &kp UP            &kp RIGHT     &kp SQT       &kp RSHFT
&kp LS(CARET)  &kp LEFT_SHIFT  &kp LBKT      &kp LS(LBRC)  &kp LS(PRCNT)  &kp LS(STAR)    &mmv MOVE_RIGHT  &kp LS(PLUS)  &kp MINUS  &kp EQUAL         &kp LS(LPAR)  &kp FSLH      &kp LS(PRCNT)
&kp C_MUTE     &kp RBKT        &kp LS(RBRC)  &kp LGUI      &trans         &to 3           &mkp LCLK        &kp GRAVE     &kp SPACE  &sk LEFT_COMMAND  &kp DOLLAR    &kp LS(RPAR)
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
